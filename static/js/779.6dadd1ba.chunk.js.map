{"version":3,"file":"static/js/779.6dadd1ba.chunk.js","mappings":"qPAEaA,EAAKC,EAAAA,GAAAA,GAAH,oEAMFC,EAAKD,EAAAA,GAAAA,GAAH,2SAmBFE,EAAOF,EAAAA,GAAAA,KAAH,4EAMJG,EAAIH,EAAAA,GAAAA,EAAH,sG,SCAd,EA3BiB,WACf,OAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACYC,GAAWC,EAAAA,EAAAA,MAAfC,GAKR,OAHAC,EAAAA,EAAAA,YAAU,WACRH,IAAUI,EAAAA,EAAAA,IAAoBJ,GAAQK,KAAKN,GAAYO,MAAMC,QAAQC,IACtE,GAAE,CAACR,KAEF,8BACGF,GAAWA,EAAQW,OAAS,GAC3B,SAACjB,EAAD,UACGM,EAAQY,KAAI,SAAAC,GAAE,OACb,UAACjB,EAAD,YACE,UAACE,EAAD,uBACU,SAACD,EAAD,UAAOgB,EAAGC,aAEpB,SAAChB,EAAD,sBACA,SAACD,EAAD,UAAOgB,EAAGE,YALHF,EAAGT,GADC,OAWjB,SAACN,EAAD,8BAIP,C,+LC9BKkB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAc,eACdC,EAAmB,qBAElB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBH,EAAAA,EAAAA,GAAM,GAAD,OAAIE,GAAoB,CAClDE,OAAQ,CACNC,QAASN,KAHR,cACCO,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,wFACkBV,EAAAA,EAAAA,GAAM,GAAD,OAAIC,GAAe,CAC7CG,OAAQ,CACNC,QAASN,EACTW,MAAOA,KAJN,cACCJ,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,wFACkBa,EAAAA,EAAAA,GAAM,SAAD,OAAUb,GAAM,CAC1CiB,OAAQ,CACNC,QAASN,KAHR,cACCO,EADD,yBAMEA,EAASC,MANX,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCzB,GAAhC,wFACkBa,EAAAA,EAAAA,GAAM,SAAD,OAAUb,EAAV,YAAwB,CAClDiB,OAAQ,CACNC,QAASN,KAHR,cACCO,EADD,yBAMEA,EAASC,KAAKM,MANhB,kEASA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCF,GAAnC,wFACkBa,EAAAA,EAAAA,GAAM,SAAD,OAAUb,EAAV,YAAwB,CAClDiB,OAAQ,CACNC,QAASN,KAHR,cACCO,EADD,yBAMEA,EAASC,KAAKC,SANhB,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/useApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\nlist-style: none;\nmargin: 0;\npadding: 0;\n`\n\nexport const Li = styled.li`\n:not(:first-child){\npadding-top: 20px;    \n}\nfont-weight: 600;\ncolor: #561593;\nfont-family: 'Abel', sans-serif;\n:after{\n  content: \"\";\n  display: block;\n  width: 100%;\n  height: 1px;\n  background: #001F54;\n  opacity: 0.1;\n  left: 0;\n  position: absolute;\n}\n`\n\nexport const Span = styled.span`\ncolor: black;\nfont-size: 16px;\nfont-weight: 500;\n`\n\nexport const P = styled.p`\nfont-family: 'Abel', sans-serif;\nfont-size: 16px;\ncolor: blue;\nmargin: 0;\n`","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsOfMovie } from 'services/useApi';\nimport { Li, P, Span, Ul } from './Reviews.styled';\n\n const Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { id: filmId } = useParams();\n\n  useEffect(() => {\n    filmId && fetchReviewsOfMovie(filmId).then(setReviews).catch(console.log);\n  }, [filmId]);\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <Ul>\n          {reviews.map(el => (\n            <Li key={el.id}>\n              <P>\n                Author: <Span>{el.author}</Span>\n              </P>\n              <P>Review</P>\n              <Span>{el.content}</Span>\n            </Li>\n          ))}\n        </Ul>\n      ) : (\n        <P>No reviews yet</P>\n      )}\n    </>\n  );\n};\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '47a16356b4a0b318c8bcd78a4994c971';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst searchFilms = 'search/movie';\nconst getTrendingFilms = 'trending/movie/day';\n\nexport async function fetchTrendingFilm() {\n  const response = await axios(`${getTrendingFilms}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchSearchFilms(query) {\n  const response = await axios(`${searchFilms}`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchByMovieId(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\nexport async function fetchCastOfMovie(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n}\n\nexport async function fetchReviewsOfMovie(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}"],"names":["Ul","styled","Li","Span","P","useState","reviews","setReviews","filmId","useParams","id","useEffect","fetchReviewsOfMovie","then","catch","console","log","length","map","el","author","content","API_KEY","axios","searchFilms","getTrendingFilms","fetchTrendingFilm","params","api_key","response","data","results","fetchSearchFilms","query","fetchByMovieId","fetchCastOfMovie","cast"],"sourceRoot":""}